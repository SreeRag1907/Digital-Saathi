import React, { useState } from 'react';
import { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert, Linking } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { router } from 'expo-router';
import { OfflineIndicator } from '@/components/OfflineIndicator';
import { AIFeatures } from '@/components/AIFeatures';
import { geminiService } from '@/services/GeminiService';
import { Phone, Thermometer, Sprout, Heart, FileText, TriangleAlert as AlertTriangle, Newspaper, Video, Globe } from 'lucide-react-native';

export default function HomeScreen() {
  const [userName] = useState('‡§ï‡§ø‡§∏‡§æ‡§® ‡§ú‡•Ä'); // In real app, get from user profile
  const [currentLanguage, setCurrentLanguage] = useState('‡§π‡§ø‡§Ç‡§¶‡•Ä');
  const [currentTime] = useState(() => {
    const hour = new Date().getHours();
    if (hour < 12) return '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§';
    if (hour < 17) return '‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞';
    return '‡§∂‡•Å‡§≠ ‡§∏‡§æ‡§Ø‡§Ç‡§ï‡§æ‡§≤';
  });

  // Translation object
  const translations = {
    '‡§π‡§ø‡§Ç‡§¶‡•Ä': {
      greeting: currentTime,
      userName: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§ú‡•Ä',
      appName: 'üåæ GramSetu',
      subtitle: '‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•á‡§§‡•Å',
      tagline: 'Bridging India\'s Rural Digital Divide',
      languageIndicator: '‡§≠‡§æ‡§∑‡§æ',
      emergencyService: '‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ',
      quickServices: '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç',
      todayInfo: '‡§Ü‡§ú ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä',
      otherServices: '‡§Ö‡§®‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç',
      videoTutorials: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤',
      languageChange: '‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç',
      moreServices: '‡§Ö‡§ß‡§ø‡§ï ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç',
      weather: '‡§Æ‡•å‡§∏‡§Æ ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä',
      news: '‡§ó‡§æ‡§Ç‡§µ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞',
      scheme: '‡§®‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ',
      clickHint: '‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡•á ‡§ú‡§æ‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç',
      quickActions: {
        farmer: { title: '‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ', subtitle: '‡§Ü‡§ú ‡§ï‡•Ä ‡§ï‡•Ä‡§Æ‡§§‡•á‡§Ç' },
        weather: { title: '‡§Æ‡•å‡§∏‡§Æ', subtitle: '‡§Ü‡§ú ‡§ï‡§æ ‡§Æ‡•å‡§∏‡§Æ' },
        health: { title: '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø', subtitle: '‡§™‡§π‡§≤‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ' },
        schemes: { title: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ', subtitle: '‡§®‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç' }
      }
    },
    'English': {
      greeting: new Date().getHours() < 12 ? 'Good Morning' : new Date().getHours() < 17 ? 'Good Afternoon' : 'Good Evening',
      userName: 'Farmer Ji',
      appName: 'üåæ GramSetu',
      subtitle: 'Digital Bridge for Rural India',
      tagline: 'Bridging India\'s Rural Digital Divide',
      languageIndicator: 'Language',
      emergencyService: 'Emergency Services',
      quickServices: 'Quick Services',
      todayInfo: 'Today\'s Information',
      otherServices: 'Other Services',
      videoTutorials: 'Video Tutorials',
      languageChange: 'Change Language',
      moreServices: 'More Services',
      weather: 'Weather Alert',
      news: 'Village News',
      scheme: 'New Scheme',
      clickHint: 'Tap for more details',
      quickActions: {
        farmer: { title: 'Market Prices', subtitle: 'Today\'s Rates' },
        weather: { title: 'Weather', subtitle: 'Today\'s Weather' },
        health: { title: 'Health', subtitle: 'First Aid' },
        schemes: { title: 'Gov Schemes', subtitle: 'New Schemes' }
      }
    },
    '‡§Æ‡§∞‡§æ‡§†‡•Ä': {
      greeting: new Date().getHours() < 12 ? '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§' : new Date().getHours() < 17 ? '‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞' : '‡§∂‡•Å‡§≠ ‡§∏‡§Ç‡§ß‡•ç‡§Ø‡§æ',
      userName: '‡§∂‡•á‡§§‡§ï‡§∞‡•Ä ‡§ú‡•Ä',
      appName: 'üåæ GramSetu',
      subtitle: '‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§≠‡§æ‡§∞‡§§‡§æ‡§ö‡§æ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§™‡•Ç‡§≤',
      tagline: 'Bridging India\'s Rural Digital Divide',
      languageIndicator: '‡§≠‡§æ‡§∑‡§æ',
      emergencyService: '‡§Ü‡§™‡§§‡•ç‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ',
      quickServices: '‡§§‡•ç‡§µ‡§∞‡§ø‡§§ ‡§∏‡•á‡§µ‡§æ',
      todayInfo: '‡§Ü‡§ú‡§ö‡•Ä ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä',
      otherServices: '‡§á‡§§‡§∞ ‡§∏‡•á‡§µ‡§æ',
      videoTutorials: '‡§µ‡•ç‡§π‡§ø‡§°‡§ø‡§ì ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤',
      languageChange: '‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡§æ',
      moreServices: '‡§Ö‡§ß‡§ø‡§ï ‡§∏‡•á‡§µ‡§æ',
      weather: '‡§π‡§µ‡§æ‡§Æ‡§æ‡§® ‡§ö‡•á‡§§‡§æ‡§µ‡§£‡•Ä',
      news: '‡§ó‡§æ‡§µ‡§æ‡§§‡•Ä‡§≤ ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ',
      scheme: '‡§®‡§µ‡•Ä‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ',
      clickHint: '‡§Ö‡§ß‡§ø‡§ï ‡§Æ‡§æ‡§π‡§ø‡§§‡•Ä‡§∏‡§æ‡§†‡•Ä ‡§ü‡•Ö‡§™ ‡§ï‡§∞‡§æ',
      quickActions: {
        farmer: { title: '‡§Æ‡§Ç‡§°‡§à ‡§≠‡§æ‡§µ', subtitle: '‡§Ü‡§ú‡§ö‡•á ‡§¶‡§∞' },
        weather: { title: '‡§π‡§µ‡§æ‡§Æ‡§æ‡§®', subtitle: '‡§Ü‡§ú‡§ö‡•á ‡§π‡§µ‡§æ‡§Æ‡§æ‡§®' },
        health: { title: '‡§Ü‡§∞‡•ã‡§ó‡•ç‡§Ø', subtitle: '‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§â‡§™‡§ö‡§æ‡§∞' },
        schemes: { title: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ', subtitle: '‡§®‡§µ‡•Ä‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ' }
      }
    }
  };

  const t = translations[currentLanguage as keyof typeof translations] || translations['‡§π‡§ø‡§Ç‡§¶‡•Ä'];

  const handleEmergencyCall = () => {
    Alert.alert(
      '‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ',
      '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:',
      [
        { 
          text: '‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏ (108)', 
          onPress: () => {
            try {
              Linking.openURL('tel:108');
            } catch (error) {
              Alert.alert('‡§ï‡•â‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...', '108 - ‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏ ‡§∏‡•á‡§µ‡§æ');
            }
          }
        },
        { 
          text: '‡§™‡•Å‡§≤‡§ø‡§∏ (100)', 
          onPress: () => {
            try {
              Linking.openURL('tel:100');
            } catch (error) {
              Alert.alert('‡§ï‡•â‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...', '100 - ‡§™‡•Å‡§≤‡§ø‡§∏ ‡§∏‡•á‡§µ‡§æ');
            }
          }
        },
        { 
          text: '‡§Æ‡§π‡§ø‡§≤‡§æ ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® (1091)', 
          onPress: () => {
            try {
              Linking.openURL('tel:1091');
            } catch (error) {
              Alert.alert('‡§ï‡•â‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...', '1091 - ‡§Æ‡§π‡§ø‡§≤‡§æ ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®');
            }
          }
        },
        { 
          text: '‡§ï‡§ø‡§∏‡§æ‡§® ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® (1800-180-1551)', 
          onPress: () => {
            try {
              Linking.openURL('tel:18001801551');
            } catch (error) {
              Alert.alert('‡§ï‡•â‡§≤ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç...', '1800-180-1551 - ‡§ï‡§ø‡§∏‡§æ‡§® ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®');
            }
          }
        },
        { text: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç', style: 'cancel' },
      ]
    );
  };

  // AI Feature handlers
  const handleCropDiagnosis = async (imageUri: string, location: string, cropType: string) => {
    // In real implementation, convert image to base64
    const mockBase64 = 'mock_base64_image_data';
    return await geminiService.diagnoseCrop({
      imageBase64: mockBase64,
      location,
      cropType
    });
  };

  const handleSchemeSimplification = async (schemeText: string) => {
    return await geminiService.simplifyScheme(schemeText);
  };

  const handleOCRInterpretation = async (extractedText: string) => {
    return await geminiService.interpretOCRText(extractedText);
  };

  // Additional service handlers
  const handleVideoTutorials = () => {
    Alert.alert(
      '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤',
      '‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§ü‡•ç‡§Ø‡•Ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§≤:',
      [
        { 
          text: '‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤', 
          onPress: () => {
            try {
              Linking.openURL('https://www.youtube.com/results?search_query=crop+care+hindi');
            } catch (error) {
              Alert.alert('‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã', '‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ñ‡•ã‡§≤‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à...');
            }
          }
        },
        { 
          text: '‡§ú‡•à‡§µ‡§ø‡§ï ‡§ñ‡•á‡§§‡•Ä', 
          onPress: () => {
            try {
              Linking.openURL('https://www.youtube.com/results?search_query=organic+farming+hindi');
            } catch (error) {
              Alert.alert('‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã', '‡§ú‡•à‡§µ‡§ø‡§ï ‡§ñ‡•á‡§§‡•Ä ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ñ‡•ã‡§≤‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à...');
            }
          }
        },
        { 
          text: '‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ ‡§ú‡§æ‡§Ç‡§ö‡§®‡§æ', 
          onPress: () => {
            try {
              Linking.openURL('https://www.youtube.com/results?search_query=mandi+bhav+check+hindi');
            } catch (error) {
              Alert.alert('‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã', '‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ñ‡•ã‡§≤‡•Ä ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à...');
            }
          }
        },
        { text: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç', style: 'cancel' },
      ]
    );
  };

  const handleLanguageChange = () => {
    Alert.alert(
      '‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç / Change Language',
      '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç / Please select your language:',
      [
        { 
          text: '‡§π‡§ø‡§Ç‡§¶‡•Ä', 
          onPress: () => {
            setCurrentLanguage('‡§π‡§ø‡§Ç‡§¶‡•Ä');
            Alert.alert('‡§≠‡§æ‡§∑‡§æ ‡§™‡§∞‡§ø‡§µ‡§∞‡•ç‡§§‡§ø‡§§', '‡§Ü‡§™‡§ï‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§ü ‡§ï‡§∞ ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à‡•§');
          }
        },
        { 
          text: 'English', 
          onPress: () => {
            setCurrentLanguage('English');
            Alert.alert('Language Changed', 'Your language has been set to English.');
          }
        },
        { 
          text: '‡§Æ‡§∞‡§æ‡§†‡•Ä', 
          onPress: () => {
            setCurrentLanguage('‡§Æ‡§∞‡§æ‡§†‡•Ä');
            Alert.alert('‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡§≤‡•á‡§≤‡•Ä', '‡§§‡•Å‡§Æ‡§ö‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡§∞‡§æ‡§†‡•Ä‡§§ ‡§∏‡•á‡§ü ‡§ï‡•á‡§≤‡•Ä ‡§ó‡•á‡§≤‡•Ä ‡§Ü‡§π‡•á.');
          }
        },
        { 
          text: '‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä', 
          onPress: () => {
            setCurrentLanguage('‡§ó‡•Å‡§ú‡§∞‡§æ‡§§‡•Ä');
            Alert.alert('‡™≠‡™æ‡™∑‡™æ ‡™¨‡™¶‡™≤‡™æ‡™à', '‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™≠‡™æ‡™∑‡™æ ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä‡™Æ‡™æ‡™Ç ‡™∏‡´á‡™ü ‡™ï‡™∞‡™µ‡™æ‡™Æ‡™æ‡™Ç ‡™Ü‡™µ‡´Ä ‡™õ‡´á.');
          }
        },
        { text: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç / Cancel', style: 'cancel' },
      ]
    );
  };

  // Weather and news update handlers
  const handleWeatherUpdate = () => {
    Alert.alert(
      '‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü',
      'üå¶Ô∏è ‡§Ü‡§ú ‡§ï‡§æ ‡§Æ‡•å‡§∏‡§Æ:\n\n‚Ä¢ ‡§§‡§æ‡§™‡§Æ‡§æ‡§®: 28¬∞C\n‚Ä¢ ‡§Ü‡§∞‡•ç‡§¶‡•ç‡§∞‡§§‡§æ: 75%\n‚Ä¢ ‡§π‡§µ‡§æ: 15 km/h\n‚Ä¢ ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ: 60%\n\n‚ö†Ô∏è ‡§ö‡•á‡§§‡§æ‡§µ‡§®‡•Ä: ‡§∂‡§æ‡§Æ 4 ‡§¨‡§ú‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§§‡•á‡§ú ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§π‡•ã ‡§∏‡§ï‡§§‡•Ä ‡§π‡•à‡•§'
    );
  };

  const handleNewsUpdate = () => {
    Alert.alert(
      '‡§ó‡§æ‡§Ç‡§µ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞',
      'üì∞ ‡§Ü‡§ú ‡§ï‡•Ä ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§ñ‡§¨‡§∞‡•á‡§Ç:\n\n‚Ä¢ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∂‡§ø‡§µ‡§ø‡§∞: ‡§ï‡§≤ ‡§∏‡•Å‡§¨‡§π 10 ‡§¨‡§ú‡•á\n‚Ä¢ ‡§®‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ: PM-KISAN ‡§ï‡•Ä ‡§ï‡§ø‡§∏‡•ç‡§§ ‡§ú‡§æ‡§∞‡•Ä\n‚Ä¢ ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£: ‡§á‡§∏ ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§∂‡•Å‡§ï‡•ç‡§∞‡§µ‡§æ‡§∞ ‡§ï‡•ã\n‚Ä¢ ‡§Æ‡§Ç‡§°‡•Ä ‡§≠‡§æ‡§µ: ‡§ó‡•á‡§π‡•Ç‡§Ç ‚Çπ2100/‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤'
    );
  };

  const handleSchemeUpdate = () => {
    router.push('/(tabs)/schemes');
  };

  return (
    <SafeAreaView style={styles.container}>
      <OfflineIndicator />
      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Header */}
        <View style={styles.header}>
          <Text style={styles.greeting}>{t.greeting}, {t.userName}!</Text>
          <Text style={styles.appName}>{t.appName}</Text>
          <Text style={styles.subtitle}>{t.subtitle}</Text>
          <Text style={styles.tagline}>{t.tagline}</Text>
          <Text style={styles.languageIndicator}>{t.languageIndicator}: {currentLanguage}</Text>
        </View>

        {/* Emergency Button */}
        <TouchableOpacity style={styles.emergencyButton} onPress={handleEmergencyCall}>
          <Phone size={24} color="#ffffff" />
          <Text style={styles.emergencyText}>{t.emergencyService}</Text>
        </TouchableOpacity>

        {/* Quick Actions */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t.quickServices}</Text>
          <View style={styles.quickActionsGrid}>
            <TouchableOpacity
              style={styles.quickActionCard}
              onPress={() => router.push('/(tabs)/farmer')}
            >
              <Sprout size={32} color="#22c55e" />
              <Text style={styles.quickActionTitle}>{t.quickActions.farmer.title}</Text>
              <Text style={styles.quickActionSubtitle}>{t.quickActions.farmer.subtitle}</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.quickActionCard}
              onPress={() => router.push('/(tabs)/weather')}
            >
              <Thermometer size={32} color="#22c55e" />
              <Text style={styles.quickActionTitle}>{t.quickActions.weather.title}</Text>
              <Text style={styles.quickActionSubtitle}>{t.quickActions.weather.subtitle}</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.quickActionCard}
              onPress={() => router.push('/(tabs)/health')}
            >
              <Heart size={32} color="#22c55e" />
              <Text style={styles.quickActionTitle}>{t.quickActions.health.title}</Text>
              <Text style={styles.quickActionSubtitle}>{t.quickActions.health.subtitle}</Text>
            </TouchableOpacity>

            <TouchableOpacity
              style={styles.quickActionCard}
              onPress={() => router.push('/(tabs)/schemes')}
            >
              <FileText size={32} color="#22c55e" />
              <Text style={styles.quickActionTitle}>{t.quickActions.schemes.title}</Text>
              <Text style={styles.quickActionSubtitle}>{t.quickActions.schemes.subtitle}</Text>
            </TouchableOpacity>
          </View>
        </View>

        {/* Daily Updates */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t.todayInfo}</Text>
          
          <TouchableOpacity style={styles.updateCard} onPress={handleWeatherUpdate}>
            <View style={styles.updateHeader}>
              <AlertTriangle size={20} color="#f59e0b" />
              <Text style={styles.updateTitle}>{t.weather}</Text>
            </View>
            <Text style={styles.updateText}>‡§Ü‡§ú ‡§∂‡§æ‡§Æ ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ ‡§π‡•à‡•§ ‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§</Text>
            <Text style={styles.clickHint}>{t.clickHint}</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.updateCard} onPress={handleNewsUpdate}>
            <View style={styles.updateHeader}>
              <Newspaper size={20} color="#3b82f6" />
              <Text style={styles.updateTitle}>{t.news}</Text>
            </View>
            <Text style={styles.updateText}>‡§ï‡§≤ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∂‡§ø‡§µ‡§ø‡§∞ ‡§ï‡§æ ‡§Ü‡§Ø‡•ã‡§ú‡§® ‡§™‡§Ç‡§ö‡§æ‡§Ø‡§§ ‡§≠‡§µ‡§® ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§ó‡§æ‡•§</Text>
            <Text style={styles.clickHint}>{t.clickHint}</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.updateCard} onPress={handleSchemeUpdate}>
            <View style={styles.updateHeader}>
              <FileText size={20} color="#8b5cf6" />
              <Text style={styles.updateTitle}>{t.scheme}</Text>
            </View>
            <Text style={styles.updateText}>‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§®‡§ø‡§ß‡§ø ‡§ï‡•Ä ‡§®‡§à ‡§ï‡§ø‡§∏‡•ç‡§§ ‡§ú‡§æ‡§∞‡•Ä ‡§π‡•ã ‡§ó‡§à ‡§π‡•à‡•§</Text>
            <Text style={styles.clickHint}>{t.clickHint}</Text>
          </TouchableOpacity>
        </View>

        {/* AI Features Section */}
        <AIFeatures
          onCropDiagnosis={handleCropDiagnosis}
          onSchemeSimplification={handleSchemeSimplification}
          onOCRInterpretation={handleOCRInterpretation}
        />

        {/* Additional Services */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>{t.otherServices}</Text>
          <View style={styles.servicesList}>
            <TouchableOpacity style={styles.serviceItem} onPress={handleVideoTutorials}>
              <Video size={24} color="#22c55e" />
              <Text style={styles.serviceText}>{t.videoTutorials}</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.serviceItem} onPress={handleLanguageChange}>
              <Globe size={24} color="#22c55e" />
              <Text style={styles.serviceText}>{t.languageChange} ({currentLanguage})</Text>
            </TouchableOpacity>
            <TouchableOpacity 
              style={styles.serviceItem} 
              onPress={() => router.push('/(tabs)/more')}
            >
              <Heart size={24} color="#22c55e" />
              <Text style={styles.serviceText}>{t.moreServices}</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f8fafc',
  },
  header: {
    padding: 20,
    backgroundColor: '#ffffff',
    borderBottomWidth: 1,
    borderBottomColor: '#e2e8f0',
  },
  greeting: {
    fontSize: 18,
    fontWeight: '600',
    color: '#22c55e',
    textAlign: 'center',
    marginBottom: 8,
  },
  appName: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#1f2937',
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 16,
    color: '#6b7280',
    textAlign: 'center',
    marginTop: 4,
  },
  tagline: {
    fontSize: 12,
    color: '#9ca3af',
    textAlign: 'center',
    marginTop: 2,
    fontStyle: 'italic',
  },
  languageIndicator: {
    fontSize: 12,
    color: '#22c55e',
    textAlign: 'center',
    marginTop: 4,
    fontWeight: '600',
  },
  emergencyButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#dc2626',
    margin: 20,
    padding: 16,
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  emergencyText: {
    color: '#ffffff',
    fontSize: 18,
    fontWeight: 'bold',
    marginLeft: 8,
  },
  section: {
    padding: 20,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#1f2937',
    marginBottom: 16,
  },
  quickActionsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  quickActionCard: {
    backgroundColor: '#ffffff',
    width: '48%',
    padding: 16,
    borderRadius: 12,
    alignItems: 'center',
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  quickActionTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#1f2937',
    marginTop: 8,
    textAlign: 'center',
  },
  quickActionSubtitle: {
    fontSize: 12,
    color: '#6b7280',
    marginTop: 4,
    textAlign: 'center',
  },
  updateCard: {
    backgroundColor: '#ffffff',
    padding: 16,
    borderRadius: 12,
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  updateHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  updateTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1f2937',
    marginLeft: 8,
  },
  updateText: {
    fontSize: 14,
    color: '#4b5563',
    lineHeight: 20,
  },
  clickHint: {
    fontSize: 12,
    color: '#6b7280',
    fontStyle: 'italic',
    marginTop: 8,
    textAlign: 'center',
  },
  servicesList: {
    backgroundColor: '#ffffff',
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  serviceItem: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f1f5f9',
  },
  serviceText: {
    fontSize: 16,
    color: '#1f2937',
    marginLeft: 12,
  },
});